version: '3'

networks:
    localdev:

services:
    postgres:
        image: postgres:13-alpine
        container_name: hedera-postgres
        restart: unless-stopped
        environment:
            POSTGRES_DB: hedera
            POSTGRES_USER: hedera
            POSTGRES_PASSWORD: hedera
        volumes:
            - ./.docker-data:/var/lib/postgresql/data/
            - ./:/app
        networks:
            - localdev
        ports:
            - "5432:5432"
    redis:
        image: redis:4.0.14-alpine
        container_name: hedera-redis
        restart: unless-stopped
        networks:
            - localdev
        ports:
            - "6379:6379"

    npm:
        image: hedera-django
        build:
            context: .
            dockerfile: Dockerfile
            target: prod
        container_name: hedera-npm
        working_dir: /app
        volumes:
            - ./static/src/:/app/static/src
            - ./webpack-stats/:/app/webpack-stats
        networks:
            - localdev
        ports:
            - "8080:8080"
        command: /bin/sh -c 'npm i && npm start'
    django:
        extends:
            file: docker-compose-common.yml
            service: django
        container_name: hedera-django
        ports:
            - "5678:5678"  # 5678 is default port for debugpy
            - "8000:8000"
        command: /bin/sh -c 'while ! nc -z postgres 5432; do sleep 1; done; python manage.py migrate & python manage.py loaddata sites & exec python manage.py runserver 0.0.0.0:8000'
    worker:
        image: hedera-django-dev
        extends:
            file: docker-compose-common.yml
            service: django
        container_name: hedera-worker
        ports:
            - "5679:5678"  # 5678 is default port for debugpy

        command: /bin/sh -c 'while ! nc -z postgres 5432; do sleep 1; done; while ! nc -z redis 6379; do sleep 1; done; exec python manage.py rqworker ${RQ_QUEUES:-default}'
